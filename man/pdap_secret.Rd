% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_secrets.R
\name{pdap_secret}
\alias{pdap_secret}
\title{Store PDAP Secret Access Key credentials}
\usage{
pdap_secret()
}
\description{
When working with PDAP, you will need to access data from either the read or
write buckets and need the credentials to do so. This function stores the
Secret Access Key associated with your account,
`Sys.getenv("AWS_SECRET_ACCESS_KEY")`. To use locally, the user will need to
store `set_key('pdap', 'secret')`, which securely stores this information with
`keyring` (we can only write, not read from a local machine).
}
\seealso{
Other authentication

\dontrun{
library(grabr)
s3_upload(upload_file_path,
          bucket = pdap_bucket("write"),
          prefix = "usaid/",
          access_key = pdap_access(),
          secret_key = pdap_secret())

#identify path to dataset uploaded
  path_wrkbnch <- s3_objects(bucket = pdap_bucket("write"),
                             prefix = "usaid/",
                             access_key = pdap_access(),
                             secret_key = pdap_secret()) %>%
    filter(str_detect(key, "Moz")) %>%
    pull(key)

#read
df_msd <- s3read_using(read_psd,
                       bucket = pdap_bucket("write"),
                       object = path_wrkbnch) }: 
\code{\link{pdap_access}()}
}
\concept{authentication

\dontrun{
library(grabr)
s3_upload(upload_file_path,
          bucket = pdap_bucket("write"),
          prefix = "usaid/",
          access_key = pdap_access(),
          secret_key = pdap_secret())

#identify path to dataset uploaded
  path_wrkbnch <- s3_objects(bucket = pdap_bucket("write"),
                             prefix = "usaid/",
                             access_key = pdap_access(),
                             secret_key = pdap_secret()) %>%
    filter(str_detect(key, "Moz")) %>%
    pull(key)

#read
df_msd <- s3read_using(read_psd,
                       bucket = pdap_bucket("write"),
                       object = path_wrkbnch) }}
